// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddGroupMember extends ethereum.Event {
  get params(): AddGroupMember__Params {
    return new AddGroupMember__Params(this);
  }
}

export class AddGroupMember__Params {
  _event: AddGroupMember;

  constructor(event: AddGroupMember) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get memberID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class AddPendingMember extends ethereum.Event {
  get params(): AddPendingMember__Params {
    return new AddPendingMember__Params(this);
  }
}

export class AddPendingMember__Params {
  _event: AddPendingMember;

  constructor(event: AddPendingMember) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get memberID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CreateGroup extends ethereum.Event {
  get params(): CreateGroup__Params {
    return new CreateGroup__Params(this);
  }
}

export class CreateGroup__Params {
  _event: CreateGroup;

  constructor(event: CreateGroup) {
    this._event = event;
  }

  get userID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get groupID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get about(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class DeleteGroup extends ethereum.Event {
  get params(): DeleteGroup__Params {
    return new DeleteGroup__Params(this);
  }
}

export class DeleteGroup__Params {
  _event: DeleteGroup;

  constructor(event: DeleteGroup) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RemoveMember extends ethereum.Event {
  get params(): RemoveMember__Params {
    return new RemoveMember__Params(this);
  }
}

export class RemoveMember__Params {
  _event: RemoveMember;

  constructor(event: RemoveMember) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get memberID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RemovePendingMember extends ethereum.Event {
  get params(): RemovePendingMember__Params {
    return new RemovePendingMember__Params(this);
  }
}

export class RemovePendingMember__Params {
  _event: RemovePendingMember;

  constructor(event: RemovePendingMember) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get memberID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateGroupAbout extends ethereum.Event {
  get params(): UpdateGroupAbout__Params {
    return new UpdateGroupAbout__Params(this);
  }
}

export class UpdateGroupAbout__Params {
  _event: UpdateGroupAbout;

  constructor(event: UpdateGroupAbout) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get about(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class UpdateGroupName extends ethereum.Event {
  get params(): UpdateGroupName__Params {
    return new UpdateGroupName__Params(this);
  }
}

export class UpdateGroupName__Params {
  _event: UpdateGroupName;

  constructor(event: UpdateGroupName) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class groups__groupByIDResult {
  value0: string;
  value1: string;
  value2: Address;

  constructor(value0: string, value1: string, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getAbout(): string {
    return this.value1;
  }

  getAuthor(): Address {
    return this.value2;
  }
}

export class groups extends ethereum.SmartContract {
  static bind(address: Address): groups {
    return new groups("groups", address);
  }

  createGroup(_user: Address, _name: string, _about: string): BigInt {
    let result = super.call(
      "createGroup",
      "createGroup(address,string,string):(uint256)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_about)
      ]
    );

    return result[0].toBigInt();
  }

  try_createGroup(
    _user: Address,
    _name: string,
    _about: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createGroup",
      "createGroup(address,string,string):(uint256)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_about)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  administration(): Address {
    let result = super.call("administration", "administration():(address)", []);

    return result[0].toAddress();
  }

  try_administration(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "administration",
      "administration():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkGroupExist(groupID: BigInt): boolean {
    let result = super.call(
      "checkGroupExist",
      "checkGroupExist(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(groupID)]
    );

    return result[0].toBoolean();
  }

  try_checkGroupExist(groupID: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkGroupExist",
      "checkGroupExist(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(groupID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  groupByID(param0: BigInt): groups__groupByIDResult {
    let result = super.call(
      "groupByID",
      "groupByID(uint256):(string,string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new groups__groupByIDResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toAddress()
    );
  }

  try_groupByID(param0: BigInt): ethereum.CallResult<groups__groupByIDResult> {
    let result = super.tryCall(
      "groupByID",
      "groupByID(uint256):(string,string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new groups__groupByIDResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toAddress()
      )
    );
  }

  groupIdByName(param0: string): BigInt {
    let result = super.call(
      "groupIdByName",
      "groupIdByName(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBigInt();
  }

  try_groupIdByName(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "groupIdByName",
      "groupIdByName(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isAdminOfGroup(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "isAdminOfGroup",
      "isAdminOfGroup(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_isAdminOfGroup(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAdminOfGroup",
      "isAdminOfGroup(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isGroupAuthor(groupId: BigInt, _user: Address): boolean {
    let result = super.call(
      "isGroupAuthor",
      "isGroupAuthor(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(groupId),
        ethereum.Value.fromAddress(_user)
      ]
    );

    return result[0].toBoolean();
  }

  try_isGroupAuthor(
    groupId: BigInt,
    _user: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGroupAuthor",
      "isGroupAuthor(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(groupId),
        ethereum.Value.fromAddress(_user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isGroupMember(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "isGroupMember",
      "isGroupMember(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_isGroupMember(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGroupMember",
      "isGroupMember(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isGroupPendingMember(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "isGroupPendingMember",
      "isGroupPendingMember(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_isGroupPendingMember(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGroupPendingMember",
      "isGroupPendingMember(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  user(): Address {
    let result = super.call("user", "user():(address)", []);

    return result[0].toAddress();
  }

  try_user(): ethereum.CallResult<Address> {
    let result = super.tryCall("user", "user():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddGroupMemberCall extends ethereum.Call {
  get inputs(): AddGroupMemberCall__Inputs {
    return new AddGroupMemberCall__Inputs(this);
  }

  get outputs(): AddGroupMemberCall__Outputs {
    return new AddGroupMemberCall__Outputs(this);
  }
}

export class AddGroupMemberCall__Inputs {
  _call: AddGroupMemberCall;

  constructor(call: AddGroupMemberCall) {
    this._call = call;
  }

  get executor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddGroupMemberCall__Outputs {
  _call: AddGroupMemberCall;

  constructor(call: AddGroupMemberCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _administration(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _userContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddPendingMemberCall extends ethereum.Call {
  get inputs(): AddPendingMemberCall__Inputs {
    return new AddPendingMemberCall__Inputs(this);
  }

  get outputs(): AddPendingMemberCall__Outputs {
    return new AddPendingMemberCall__Outputs(this);
  }
}

export class AddPendingMemberCall__Inputs {
  _call: AddPendingMemberCall;

  constructor(call: AddPendingMemberCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddPendingMemberCall__Outputs {
  _call: AddPendingMemberCall;

  constructor(call: AddPendingMemberCall) {
    this._call = call;
  }
}

export class CreateGroupCall extends ethereum.Call {
  get inputs(): CreateGroupCall__Inputs {
    return new CreateGroupCall__Inputs(this);
  }

  get outputs(): CreateGroupCall__Outputs {
    return new CreateGroupCall__Outputs(this);
  }
}

export class CreateGroupCall__Inputs {
  _call: CreateGroupCall;

  constructor(call: CreateGroupCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _about(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateGroupCall__Outputs {
  _call: CreateGroupCall;

  constructor(call: CreateGroupCall) {
    this._call = call;
  }

  get _groupID(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DeleteGroupCall extends ethereum.Call {
  get inputs(): DeleteGroupCall__Inputs {
    return new DeleteGroupCall__Inputs(this);
  }

  get outputs(): DeleteGroupCall__Outputs {
    return new DeleteGroupCall__Outputs(this);
  }
}

export class DeleteGroupCall__Inputs {
  _call: DeleteGroupCall;

  constructor(call: DeleteGroupCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeleteGroupCall__Outputs {
  _call: DeleteGroupCall;

  constructor(call: DeleteGroupCall) {
    this._call = call;
  }
}

export class RemoveMemberCall extends ethereum.Call {
  get inputs(): RemoveMemberCall__Inputs {
    return new RemoveMemberCall__Inputs(this);
  }

  get outputs(): RemoveMemberCall__Outputs {
    return new RemoveMemberCall__Outputs(this);
  }
}

export class RemoveMemberCall__Inputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get executor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveMemberCall__Outputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }
}

export class RemovePendingMemberCall extends ethereum.Call {
  get inputs(): RemovePendingMemberCall__Inputs {
    return new RemovePendingMemberCall__Inputs(this);
  }

  get outputs(): RemovePendingMemberCall__Outputs {
    return new RemovePendingMemberCall__Outputs(this);
  }
}

export class RemovePendingMemberCall__Inputs {
  _call: RemovePendingMemberCall;

  constructor(call: RemovePendingMemberCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemovePendingMemberCall__Outputs {
  _call: RemovePendingMemberCall;

  constructor(call: RemovePendingMemberCall) {
    this._call = call;
  }
}

export class UpdateGroupAboutCall extends ethereum.Call {
  get inputs(): UpdateGroupAboutCall__Inputs {
    return new UpdateGroupAboutCall__Inputs(this);
  }

  get outputs(): UpdateGroupAboutCall__Outputs {
    return new UpdateGroupAboutCall__Outputs(this);
  }
}

export class UpdateGroupAboutCall__Inputs {
  _call: UpdateGroupAboutCall;

  constructor(call: UpdateGroupAboutCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _about(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateGroupAboutCall__Outputs {
  _call: UpdateGroupAboutCall;

  constructor(call: UpdateGroupAboutCall) {
    this._call = call;
  }
}

export class UpdateGroupNameCall extends ethereum.Call {
  get inputs(): UpdateGroupNameCall__Inputs {
    return new UpdateGroupNameCall__Inputs(this);
  }

  get outputs(): UpdateGroupNameCall__Outputs {
    return new UpdateGroupNameCall__Outputs(this);
  }
}

export class UpdateGroupNameCall__Inputs {
  _call: UpdateGroupNameCall;

  constructor(call: UpdateGroupNameCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get groupId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateGroupNameCall__Outputs {
  _call: UpdateGroupNameCall;

  constructor(call: UpdateGroupNameCall) {
    this._call = call;
  }
}
