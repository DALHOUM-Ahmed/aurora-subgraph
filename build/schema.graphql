type Post @entity {
  id: ID!
  title: String! # string
  body: String! # string
  createdAt: BigInt! # uint256
  groupID: BigInt! # uint256
  postID: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  editedAt: BigInt
  transactionHash: Bytes!
  author: User!
  deleted: Boolean
}

type User @entity {
  id: ID! # this field will contain a representation of the wallet address, cause the user will login with his wallet
  userId: BigInt!
  followedGroups: [ID!]
  followedUsers: [ID!]
  followers: [ID!]
  followedGroupsCount: Int
  followedUsersCount: Int
  followingUsersCount: Int
  userAddress: String # address
  firstName: String # string
  middleName: String # string
  lastName: String # string
  userName: String # string
  pronoun: String
  backgroundColor: String
  dateOfBirth: BigInt # string
  email: String # string
  bio: String # string
  pictureUpload: String # string
  nftAddress: Bytes # address
  ownedID: BigInt # uint256
  telephone: String # string
  govtID: String # string
  fingerScan: String # string
  blockNumber: BigInt
  blockTimestamp: BigInt
  transactionHash: Bytes
  telephoneVerifiedData: String
  emailVerifiedData: String
  discord: String
  instagram: String
  twitter: String
  tiktok: String
  tags: [String!]
  posts: [Post!]! @derivedFrom(field: "author")
  groups: [Group!]!
  deleted: Boolean
}

type Group @entity {
  id: ID! # this field will contain a representation of the wallet address, cause the user will login with his wallet
  name: String!
  author: User!
  about: String!
  admins: [User!]
  members: [User!]
  pendingMembers: [User!]
  deleted: Boolean
}

type _Schema_
  @fulltext(
    name: "getUserByEmail"
    language: simple
    algorithm: rank
    include: [{ entity: "User", fields: [{ name: "email" }] }]
  )
  @fulltext(
    name: "getUserByAddress"
    language: simple
    algorithm: rank
    include: [{ entity: "User", fields: [{ name: "userAddress" }] }]
  )
  @fulltext(
    name: "getUserById"
    language: simple
    algorithm: rank
    include: [{ entity: "User", fields: [{ name: "id" }] }]
  )
